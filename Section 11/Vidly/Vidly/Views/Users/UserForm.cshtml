@using Vidly.ViewModels
@model UserFormViewModel
@{
    ViewBag.Title = "UserForm";
}

<h2>User Form</h2>
@using (Html.BeginForm("Save", "Users", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "userForm", name = "userForm" }))
    {
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                @Html.LabelFor(u => u.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @if (!string.IsNullOrWhiteSpace(Model.Id))
                    {
                        @Html.ValueFor(u => u.Email)
                        @Html.HiddenFor(u => u.Email)
                    }
                    else
                    {
                        @Html.TextBoxFor(u => u.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(u => u.Email)
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(u => u.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(u => u.Password, new { @class = "form-control", autocomplete = "off" })
                    @Html.ValidationMessageFor(u => u.Password)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(u => u.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(u => u.ConfirmPassword, new { @class = "form-control", autocomplete = "off" })
                    @Html.ValidationMessageFor(u => u.ConfirmPassword)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(u => u.DrivingLicense, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(u => u.DrivingLicense, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.DrivingLicense)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(u => u.Phone, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(u => u.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.Phone)
                </div>
            </div>
            @Html.HiddenFor(m => m.Id)
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-primary" value="Save" />
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <table id="roles" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="selectAll" name="selectAll" /></th>
                        <th>Role</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Roles.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.CheckBoxFor(m => m.Roles[i].Checked)
                                @Html.HiddenFor(m => m.Roles[i].Id)
                                @Html.HiddenFor(m => m.Roles[i].Name)
                            </td>
                            <td>
                                @Html.ValueFor(m => m.Roles[i].Name)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
 } 

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {

            //var table = $("#roles").DataTable({
            //    "paging": false,
            //    "ordering": false,
            //    "searching": false,
            //    "info": false,
            //    ajax: {
            //        url: "/api/roles",
            //        dataSrc: "",
            //        type: "GET"
            //    },
            //    columns: [
            //        {
            //            data: "id",
            //            render: function (data, type, role) {
            //                return "<input type='checkbox' id='selectedRole' name='selectedRole' class='js-select' data-role-id=" + role.id + ">";
            //            }
            //        },
            //        {
            //            data: "name"
            //        }
            //    ]
            //});

            // Handle click on "Select all" control
            $('#selectAll').on('click', function () {
                // Check/uncheck all checkboxes in the table
                //var rows = table.rows({ 'search': 'applied' }).nodes();
                var rows = $("#roles tr");
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
            });

            // Handle click on checkbox to set state of "Select all" control
            $('#roles tbody').on('change', 'input[type="checkbox"]', function () {
                // If checkbox is not checked
                if (!this.checked) {
                    var el = $('#selectAll').get(0);
                    // If "Select all" control is checked and has 'indeterminate' property
                    if (el && el.checked && ('indeterminate' in el)) {
                        // Set visual state of "Select all" control
                        // as 'indeterminate'
                        el.indeterminate = true;
                    }
                }
            });

            //var validator = $("#userForm").submit(function (e) {
            //    e.preventDefault();

            //    if ($(this).valid()) {
            //        var $form = $("#userForm").serializeArray();
            //        var $checkbox = $("#roles tbody input:checkbox:checked");

            //        $.each($checkbox, function (i, val) {
            //            $form.push({
            //                name: "RolesIds",
            //                value: $(val).attr("data-role-id")
            //            });
            //        });

            //        $.ajax({
            //            url: "/users/save",
            //            method: "post",
            //            data: $form
            //        }).done(function () {
            //            validator.restForm();
            //        }).fail(function (jqXHR, textStatus, errorThrown) {
            //            var result = JSON.parse(jqXHR.responseText);
            //            toastr.error(result.message);
            //        });
            //    }
            //});
        });
    </script>
}
