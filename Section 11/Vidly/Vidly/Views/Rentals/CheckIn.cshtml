@{
    ViewBag.Title = "Check In Form";
}

<h2>Check In Form</h2>
<form id="checkIn">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-atLeastOneMovie="true" type="text" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            //ViewModel for Client
            var vm = {
                MoviesIds: []
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            //Bug: 如果先選擇了一個正確的customer, 再將textbox清空, customerId仍然保留著
            $('#customer').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function (e, customer) {
                vm.customerId = customer.id;
            });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {
                $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");

                $("#movie").typeahead("val", "");

                vm.MoviesIds.push(movie.id);
            });

            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer.");

            $.validator.addMethod("atLeastOneMovie", function () {
                return vm.MoviesIds.length > 0;
            }, "Please select at least one movie.");

            var validator = $("#checkIn").validate({
                //避免validate檢核typeahead產生的hidden input, 造成排版問題
                ignore: ":hidden, .tt-hint",
                submitHandler: function () {
                    $.ajax({
                        url: "/api/CheckIn",
                        method: "post",
                        data: vm
                    }).done(function () {
                        toastr.success("Check In success.");

                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();

                        vm = { MoviesIds: [] };

                        validator.restForm();
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        var result = JSON.parse(jqXHR.responseText);
                        toastr.error(result.message);
                    });

                    return false;
                }
            });
        });
    </script>
}